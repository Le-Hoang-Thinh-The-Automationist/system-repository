---
# Create Secret Enginer with KV-V2
- name: Enable KV Secret Engine at path 'minikube-kv'
  community.hashi_vault.vault_write:
    url: "{{ VAULT_API_URL }}"
    path: "sys/mounts/minikube-kv"
    data:
      type: "kv"
      description: "Secret Engine for Minikube Cluster minikube-kv"
      options:
            version: 2
      register: result
      ignore_errors: yes

- name: Enable AppRole Authentication Methods at path 'minikube-roles'
  community.hashi_vault.vault_write:
    path: sys/auth/minikube-roles
    data:
      type: kubernetes
      description: "Kubernetes auth method for service accounts under minikube-roles"
  register: result
  ignore_errors: yes

- name: Enable and create Policy for reading database
  community.hashi_vault.vault_write:
    path: sys/policy/read-database-policy
    name: read-database-policy
    data:
      policy: "{{ lookup('file', role_path + '/files/read-database-policy.hcl') }}"
  register: result
  ignore_errors: yes

- name: Create a database access secret in 'minikube-kv/application-ns/database'
  community.hashi_vault.vault_kv2_write:
    engine_mount_point: minikube-kv
    path: application-ns/database
    data:
      username: "user"
      password: "password"
      db_url:   "mysql" 
      db_port:  "3306"  
      db_name:  "testdb"  
    read_before_write : true

- name: Configure Kubernetes ServiceAccount and ClusterRoleBinding for Vault TokenReview
  vars:
    vault_service_account: "vault-agent-sa"
    vault_namespace: "application-ns"

  block:
    - name: Create ServiceAccount "vault-server" for the Vault Server
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: "{{ vault_service_account }}"
            namespace: "{{ vault_namespace }}"

    - name: Create ClusterRoleBinding "vault-tokenreview-binding"
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: vault-tokenreview-binding
          subjects:
            - kind: ServiceAccount
              name: "{{ vault_service_account }}"
              namespace: "{{ vault_namespace }}"
          roleRef:
            kind: ClusterRole
            name: system:auth-delegator
            apiGroup: rbac.authorization.k8s.io

- name: Create Vault role for backend service in Minikube Cluster
  vars:
    backend_service_authen_path: "auth/minikube-roles/role/vault-agent-of-backend-service-role"
    vault_service_account: "vault-agent-sa"
    vault_namespace: "application-ns"
  block:
    - name: Create Vault Agent Service Account for Backend Service in 'minikube-roles'
      community.hashi_vault.vault_write:
        path: "{{ backend_service_authen_path }}"
        data:
          bound_service_account_names: "{{ vault_service_account }}"
          bound_service_account_namespaces: "{{ vault_namespace }}"
          token_policies: "read-database-policy"
          token_ttl: "20m"
          token_max_ttl: "30m"

    - name: Read the Role ID for the Backend Service
      command: "kubectl get sa {{ vault_service_account }} -n default -o jsonpath='{.secrets[0].name}'"
      register: VAULT_SA_SECRET

    - name: Read the JWT reviewer for the Backend Service
      command: "kubectl get secret {{ VAULT_SA_SECRET }} -n default -o jsonpath='{.data.token}'| base64 -d"
      register: REVIEWER_JWT

    - name: Read the CA certification for the Backend Service
      command: "kubectl get secret {{ VAULT_SA_SECRET }} -n default -o jsonpath='{.data['ca\\.crt']}' | base64 -d"
      register: K8S_CA_CERT

    - name: Print VAULT_SA_SECRET register details
      debug:
        var: VAULT_SA_SECRET

    - name: Print REVIEWER_JWT register details
      debug:
        var: REVIEWER_JWT

    - name: Print K8S_CA_CERT register details
      debug:
        var: K8S_CA_CERT
    # - name: Config the Kubernetes Auth Method to passing the 'auth-delegator' right to Vault Server


    # - name: Write the Kube Config for the Vault Server
    #   community.hashi_vault.vault_write:
    #     path: "{{ backend_service_authen_path }}"
    #     data:
    #       token_policies: "read-database-policy"
    #       token_ttl: "20m"
    #       token_max_ttl: "30m"
    #       secret_id_num_uses: 40
    #       secret_id_ttl: 10m
    #       bind_secret_id: true
